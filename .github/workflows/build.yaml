name: Go CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # Run integration tests every Monday at 9:00 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"

      - name: Build
        run: go build ./cmd/rtve-subs

      - name: Run unit tests
        run: go test ./... -v

  integration-tests:
    runs-on: ubuntu-latest
    # Only run integration tests on schedule or manual trigger
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"

      - name: Run integration tests
        id: integration-tests
        run: |
          go test ./api -v -run TestIntegration
        continue-on-error: true

      - name: Create issue on failure
        if: steps.integration-tests.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Integration tests failed - ${new Date().toISOString().split('T')[0]}`;
            const body = `## Integration Test Failure

            The weekly integration tests have failed.

            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Triggered by:** ${{ github.event_name }}
            **Date:** ${new Date().toISOString()}

            This could indicate:
            - Changes in RTVE's API or website structure
            - Network connectivity issues
            - Breaking changes in dependencies

            Please investigate the test failures and update the scraper if necessary.

            ### Next Steps
            1. Review the failed test output in the workflow run
            2. Check if RTVE has changed their API or HTML structure
            3. Update regex patterns or API endpoints if needed
            4. Close this issue once resolved
            `;

            // Check if there's already an open issue for integration test failures
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'integration-test-failure'
            });

            const existingIssue = issues.data.find(issue =>
              issue.title.includes('Integration tests failed')
            );

            if (existingIssue) {
              // Add a comment to existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `Integration tests failed again on ${new Date().toISOString().split('T')[0]}\n\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['bug', 'integration-test-failure', 'automated']
              });
            }

      - name: Fail workflow if tests failed
        if: steps.integration-tests.outcome == 'failure'
        run: exit 1
